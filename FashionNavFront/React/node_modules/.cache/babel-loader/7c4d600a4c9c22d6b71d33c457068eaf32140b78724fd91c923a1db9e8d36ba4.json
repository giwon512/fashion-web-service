{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minjae\\\\Documents\\\\GitHub\\\\fashion-web-service-1\\\\FashionNavFront\\\\React\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport api from '../api'; // api 모듈 import\nimport { GoogleLogin } from '@react-oauth/google';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  var _location$state, _location$state$from;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      navigate(from);\n    }\n  }, [navigate, from]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(''); // 기존 에러 메시지 초기화\n\n    try {\n      const response = await api.post('/users/authenticate', {\n        email,\n        password\n      });\n      const {\n        accessToken,\n        refreshToken\n      } = response.data.body;\n      localStorage.setItem('token', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      onLogin(); // 로그인 성공 후 콜백 함수 호출\n      navigate(from); // 원래 목적지로 이동\n    } catch (error) {\n      console.error('Error during login', error);\n      setError('Login failed. Please check your credentials and try again.');\n    }\n  };\n  const handleSignup = () => {\n    navigate('/signup'); // 회원가입 페이지로 이동\n  };\n  const handleFindIdPw = () => {\n    // 아이디/비밀번호 찾기 페이지로 이동 로직 (필요시 구현)\n  };\n  const handleGoogleSuccess = response => {\n    console.log('Login Success:', response);\n    fetch('http://localhost:8080/api/users/oauth2/google', {\n      method: 'POST',\n      // POST 요청으로 수정\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: response.credential\n      }) // body에 데이터 포함\n    }).then(res => {\n      console.log('Response status:', res.status);\n      console.log('Response headers:', res.headers);\n      return res.text(); // Change to text for debugging\n    }).then(data => {\n      try {\n        console.log('Response text:', data);\n        const jsonData = JSON.parse(data); // 수동으로 JSON 파싱\n        console.log('Parsed JSON:', jsonData);\n        if (jsonData.accessToken) {\n          // jsonData.body.accessToken에서 jsonData.accessToken로 변경\n          localStorage.setItem(\"token\", jsonData.accessToken);\n          onLogin();\n          if (jsonData.isFirstLogin) {\n            // 첫 로그인 여부 확인\n            navigate('/survey'); // 설문조사 페이지로 이동\n          } else {\n            navigate('/'); // 홈 페이지로 이동\n          }\n        } else {\n          console.error('Login failed, no access token in response:', jsonData);\n        }\n      } catch (error) {\n        console.error('Error parsing JSON:', error);\n        console.log('Response text:', data);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleGoogleError = error => {\n    console.log('Login Failed:', error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-remember-me\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"rememberMe\",\n          checked: rememberMe,\n          onChange: e => setRememberMe(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rememberMe\",\n          children: \"\\uC544\\uC774\\uB514 \\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"signup-button\",\n        onClick: handleSignup,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"find-idpw-button\",\n        onClick: handleFindIdPw,\n        children: \"\\uC544\\uC774\\uB514/\\uBE44\\uBC00\\uBC88\\uD638\\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"social-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB610\\uB294\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleSuccess,\n        onError: handleGoogleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"7OsdOmjFcoTuEEQ/xle2zzTq9io=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","api","GoogleLogin","jsxDEV","_jsxDEV","Login","onLogin","_s","_location$state","_location$state$from","email","setEmail","password","setPassword","rememberMe","setRememberMe","error","setError","navigate","location","from","state","pathname","token","localStorage","getItem","handleLogin","e","preventDefault","response","post","accessToken","refreshToken","data","body","setItem","console","handleSignup","handleFindIdPw","handleGoogleSuccess","log","fetch","method","headers","JSON","stringify","credential","then","res","status","text","jsonData","parse","isFirstLogin","catch","handleGoogleError","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","checked","onClick","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/minjae/Documents/GitHub/fashion-web-service-1/FashionNavFront/React/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport api from '../api'; // api 모듈 import\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport './Login.css';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const from = location.state?.from?.pathname || \"/\";\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            navigate(from);\r\n        }\r\n    }, [navigate, from]);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // 기존 에러 메시지 초기화\r\n\r\n        try {\r\n            const response = await api.post('/users/authenticate', { email, password });\r\n            const { accessToken, refreshToken } = response.data.body;\r\n            localStorage.setItem('token', accessToken);\r\n            localStorage.setItem('refreshToken', refreshToken);\r\n            onLogin(); // 로그인 성공 후 콜백 함수 호출\r\n            navigate(from); // 원래 목적지로 이동\r\n        } catch (error) {\r\n            console.error('Error during login', error);\r\n            setError('Login failed. Please check your credentials and try again.');\r\n        }\r\n    };\r\n\r\n    const handleSignup = () => {\r\n        navigate('/signup'); // 회원가입 페이지로 이동\r\n    };\r\n\r\n    const handleFindIdPw = () => {\r\n        // 아이디/비밀번호 찾기 페이지로 이동 로직 (필요시 구현)\r\n    };\r\n\r\n    const handleGoogleSuccess = (response) => {\r\n        console.log('Login Success:', response);\r\n\r\n        fetch('http://localhost:8080/api/users/oauth2/google', {\r\n            method: 'POST',  // POST 요청으로 수정\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ token: response.credential }),  // body에 데이터 포함\r\n        })\r\n            .then((res) => {\r\n                console.log('Response status:', res.status);\r\n                console.log('Response headers:', res.headers);\r\n                return res.text();  // Change to text for debugging\r\n            })\r\n            .then((data) => {\r\n                try {\r\n                    console.log('Response text:', data);\r\n                    const jsonData = JSON.parse(data);  // 수동으로 JSON 파싱\r\n                    console.log('Parsed JSON:', jsonData);\r\n                    if (jsonData.accessToken) {  // jsonData.body.accessToken에서 jsonData.accessToken로 변경\r\n                        localStorage.setItem(\"token\", jsonData.accessToken);\r\n                        onLogin();\r\n                        if (jsonData.isFirstLogin) {  // 첫 로그인 여부 확인\r\n                            navigate('/survey');  // 설문조사 페이지로 이동\r\n                        } else {\r\n                            navigate('/'); // 홈 페이지로 이동\r\n                        }\r\n                    } else {\r\n                        console.error('Login failed, no access token in response:', jsonData);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error parsing JSON:', error);\r\n                    console.log('Response text:', data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n\r\n    const handleGoogleError = (error) => {\r\n        console.log('Login Failed:', error);\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form className=\"login-form\" onSubmit={handleLogin}>\r\n                <div className=\"login-input-group\">\r\n                    <label htmlFor=\"email\">이메일</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-group\">\r\n                    <label htmlFor=\"password\">비밀번호</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"login-remember-me\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"rememberMe\"\r\n                        checked={rememberMe}\r\n                        onChange={(e) => setRememberMe(e.target.checked)}\r\n                    />\r\n                    <label htmlFor=\"rememberMe\">아이디 저장</label>\r\n                </div>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                <button type=\"submit\" className=\"login-button\">로그인</button>\r\n            </form>\r\n            <div className=\"login-footer\">\r\n                <span className=\"signup-button\" onClick={handleSignup}>회원가입</span>\r\n                <span className=\"find-idpw-button\" onClick={handleFindIdPw}>아이디/비밀번호찾기</span>\r\n            </div>\r\n            <div className=\"social-login\">\r\n                <h3>또는</h3>\r\n                <GoogleLogin onSuccess={handleGoogleSuccess} onError={handleGoogleError} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}