발표 대본 흐름


1. 프로젝트 소개  
    - 프로젝트 필요성
        최신 패션 트렌드에 대한 정보를 보여주는 사이트는 많으나 정작 나에 대한
        맞춤 트렌드를 보여주는 사이트를 찾기 어려움. 세상에 정말 많은 패션 분야와
        소식이 있지만, 각자가 관심을 가지는 내용은 한정적임.
    
    - 프로젝트 목표
        크롤링을 통해서 여러 사이트에 산개해 있는 패션 트렌드 데이터를 모아오고
        데이터를 분류하는 체계를 만든다. 그 분류된 데이터들 중 사용자에게 맞는 데이터를
        골라서 보여주고자 한다.

2. 서비스 기획
    - 패션 포털 vs 쇼핑몰
        은근히 헷갈리는 부분. 이 부분을 잘 생각하지 않으면 패션 포털과 쇼핑몰의 경계가
        모호해지고 서비스 내용이 이상해질 수 있음을 주의함.

        쇼핑몰은 제품을 찾고 구매하는데 중점, UI/UX가 제품 검색 및 필터링에 중점을 둠.

        패션포털도 어느 정도의 제품 추천 및 소개를 하긴 하지만, 주 목적이 패션 트렌드,
        스타일 팁, 패션 뉴스, 인터뷰 또는 리뷰와 같은 패션 컨텐츠 제공임을 주의해서
        서비스 기획을 했음. 이 부분을 잘 참고해서 보아야 어떤 사용자들을 타겟으로 했는지
        잘 이해할 수 있음.

    - 서비스 컨셉
        우리 서비스를 사용할 사람들은 다음과 같은 니즈를 가진 사람들이다.
        "내가 관심있는 패션 분야에 대한 불특정한 정보들을 접하고 싶다."

        이것 외에는 패션 포털 서비스를 사용할 이유가 전혀 없다. 
        특정 제품에 대해서, 특정 셀럽에 대해서, 또는 특정 브랜드에 대해서 궁금하다면
        그 키워드를 검색하지 패션 포털을 이용하지는 않음.

        우리가 아무 생각없이 알고리즘이 추천해준대로 유튜브와 인스타 게시물들을 둘러보듯이,
        우리 서비스를 통해서는 평소에 내가 관심있는 분야의 전반적인 패션 트렌드를 
        추천받을 수 있어야할 것이고, 우리는 그러기 위해서 필요한 기능들을 정의해보았다.

    - 필요한 기능
        - Client 측
            - 선호도 조사 받기
            - 관심 카테고리 등록하기
            - 패션 컨텐츠 열람하기 (패션 트렌드, 뉴스, 셀럽 인터뷰 등)
            - 패션 아이템 추천 받기 등

        - Server 측
            - 패션 데이터 크롤링 해오기
            - 데이터 분류 및 제공

        크롤링해서 분류를 알아서 한다고 해도 컨텐츠에 대한 관리를 아예 안 할수는 없다.
        - 이외의 관리자 기능 구현
            - 뉴스 관리
            - 아이템 관리
            - 사용자 관리
            - 권한 관리
            - 카테고리 관리
            - 크롤링 관리 등

    - DB 소개
        필요한 기능을 바탕으로 구성한 DB 개요를 보여주고 자세한 설명은 생략 

3. 프로젝트 진행 상황
    - 진척도 설명
        서비스를 기획하고, 데이터 베이스를 구성
        그 후 서비스 페이지를 어떻게 보여줄 지 목업 홈페이지를 제작한 정도.
        서비스 시현에서는 크롤링을 해서 데이터를 가져왔다고 가정하였음.

    - 웹페이지 시현
        로그인 전 홈페이지 내용 보여주기 
        -> 로그인 시도 및 실패 -> 회원 가입 -> 로그인 성공 
        -> 마이페이지 -> 선호도 조사 
        -> 로그인 후 홈페이지 내용 보여주기(하드 코딩되어 있어 변하진 않겠지만
        아직 크롤링을 구현한 단계가 아니라 바뀔 예정인 것만 설명)

4. 최종 프로젝트까지 해야할 내용
    - 크롤링 및 데이터 분류체계 구현
    - 관리자 기능 구현
    - 이미 구현한 코드는 모두 react 및 spring boot 코드로 교체
    - 가능하다면 클릭한 내용을 바탕으로 선호도를 갱신하고 더 정확한 추천을 할 수 있게
    간단한 기계학습 알고리즘 적용